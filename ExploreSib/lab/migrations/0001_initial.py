# Generated by Django 4.2.5 on 2023-11-12 21:54

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Is_Super', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Expedition',
            fields=[
                ('ID_Expedition', models.AutoField(primary_key=True, serialize=False)),
                ('Name_Exp', models.CharField(default='Название экспедиции', help_text='Input name expedition', max_length=150)),
                ('DateStart', models.DateTimeField(default=datetime.datetime.now, help_text='Дата начала экспедиции')),
                ('DateEnd', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='Дата конца экспедиции', null=True)),
                ('DateApproving', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='Дата утверждения экспедиции', null=True)),
                ('Status', models.CharField(choices=[('in', 'Введён'), ('wo', 'В работе'), ('en', 'Завершён'), ('ca', 'Отменён'), ('de', 'Удалён')], default='in', help_text='Status Expedition', max_length=2)),
                ('Leader', models.CharField(default='ФИО Лидера', help_text='Input name leader', max_length=100)),
                ('Describe', models.CharField(default='...', max_length=400, null=True)),
                ('ID_Creator', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='ID_Author', to=settings.AUTH_USER_MODEL)),
                ('Moderator', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='Moderator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('ID_Object', models.IntegerField(primary_key=True, serialize=False)),
                ('Name_Obj', models.CharField(help_text='Input name obj', max_length=100)),
                ('Region', models.CharField(help_text='Input name region', max_length=100)),
                ('Year', models.IntegerField(default=1800, help_text='Input year opening')),
                ('Opener', models.CharField(help_text='Input name opener', max_length=100)),
                ('Status', models.CharField(choices=[('del', 'Удален'), ('ope', 'Действует')], default='ope', help_text='Status Obj', max_length=3)),
                ('Image_Url', models.ImageField(blank=True, upload_to='img/')),
            ],
        ),
        migrations.CreateModel(
            name='Programm1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Number', models.IntegerField(help_text='Порядковый номер', null=True)),
                ('ID_Exp', models.ForeignKey(db_column='ID_Exp', on_delete=django.db.models.deletion.CASCADE, to='lab.expedition')),
                ('ID_Obj', models.ForeignKey(db_column='ID_Obj', on_delete=django.db.models.deletion.CASCADE, to='lab.object')),
            ],
        ),
        migrations.CreateModel(
            name='Programm',
            fields=[
                ('Number', models.IntegerField(default=1, help_text='Порядковый номер', null=True)),
                ('ID_Exp', models.ForeignKey(db_column='ID_Exp', on_delete=django.db.models.deletion.CASCADE, to='lab.expedition')),
                ('ID_Obj', models.ForeignKey(db_column='ID_Obj', on_delete=django.db.models.deletion.CASCADE, to='lab.object')),
            ],
        ),
        migrations.AddField(
            model_name='expedition',
            name='Objects',
            field=models.ManyToManyField(through='lab.Programm', to='lab.object'),
        ),
    ]
